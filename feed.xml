<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Yee Chie</title>
    <link href="https://yinchie.github.io/feed.xml" rel="self" />
    <link href="https://yinchie.github.io" />
    <updated>2020-10-04T03:06:43+02:00</updated>
    <author>
        <name>Yee Chie Tu</name>
    </author>
    <id>https://yinchie.github.io</id>

    <entry>
        <title>Raspberry Pi 4 with Pi-Hole, OpenVPN and DNSCrypt</title>
        <author>
            <name>Yee Chie Tu</name>
        </author>
        <link href="https://yinchie.github.io/raspberry-pi-4-with-openvpn-pihole-dnscrypt/"/>
        <id>https://yinchie.github.io/raspberry-pi-4-with-openvpn-pihole-dnscrypt/</id>
            <category term="raspberrypi"/>
            <category term="privacy"/>
            <category term="encryption"/>
            <category term="dnscrypt"/>
            <category term="dns"/>

        <updated>2020-10-04T03:06:43+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://yinchie.github.io/media/posts/2/IMG_20200312_130217.jpg" alt="" />
                    <p>A simple how-to guide on installing and configuring a Raspberry Pi 4 to make your internet connection more safe and private by installing Pi-Hole network-wide ad-blocker, OpenVPN to encrypt your internet data and DNSCrypt to secure your DNS queries.</p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://yinchie.github.io/media/posts/2/IMG_20200312_130217.jpg" alt="" />
                <p>A simple how-to guide on installing and configuring a Raspberry Pi 4 to make your internet connection more safe and private by installing Pi-Hole network-wide ad-blocker, OpenVPN to encrypt your internet data and DNSCrypt to secure your DNS queries.</p>

<div class="post__toc">
<h3>Table of Contents</h3>
<ul>
<li> </li>
<li><a href="#raspberry-pi-os">Raspberry Pi OS</a>
<ul>
<li><a href="#optional-tweak-raspbian">Optional: Tweak Raspbian</a></li>
</ul>
</li>
<li><a href="#prep-work">Prep Work</a></li>
<li><a href="#openvpn">OpenVPN</a>
<ul>
<li><a href="#install">Install</a></li>
<li><a href="#configure-openvpn">Configure OpenVPN</a></li>
</ul>
</li>
<li><a href="#dnscrypt">DNSCrypt</a>
<ul>
<li><a href="#install-1">Install</a></li>
<li><a href="#detailed-installation-">Detailed installation:</a></li>
<li><a href="#configure-dnscrypt">Configure DNSCrypt</a></li>
</ul>
</li>
<li><a href="#pi-hole">Pi-Hole</a>
<ul>
<li><a href="#install-2">Install</a></li>
<li><a href="#configure-pi-hole">Configure Pi-Hole</a></li>
</ul>
</li>
<li><a href="#configure-clients">Configure clients</a></li>
</ul>
</div>
<h2 id="raspberry-pi-os">Raspberry Pi OS</h2>
<p>Using <a href="https://www.raspberrypi.org/downloads/">Raspberry Pi OS</a>, the official operating system for the Raspberry Pi, you can be sure that it is well optimized and supported for the Raspberry Pi.</p>
<p>Download <a href="https://www.raspberrypi.org/downloads/">Raspberry Pi Imager</a> for an effortless way to install onto a Micro-SD card.</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube.com/embed/J024soVgEeM" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>Update the system once the installation has been completed.</p>
<ul>
<li><code>sudo apt uptdate &amp;&amp; sudo apt -y upgrade</code></li>
<li><code>sudo apt install -y unattended-upgrades</code></li>
</ul>
<h3 id="optional-tweak-raspbian">Optional: Tweak Raspbian</h3>
<ul>
<li><code>sudo raspi-config</code></li>
<li>Select <code>1 Change User Password</code></li>
<li>Select <code>3 Boot Options</code> -&gt; <code>B1 Desktop / CLI</code> -&gt; <code>B2 Console Autologin</code></li>
<li>Select <code>4 Localisation Options</code> -&gt; <code>I2 Change Timezone</code></li>
<li>Select <code>4 Localisation Options</code> -&gt; <code>I4 Change Wi-Fi Country</code></li>
<li>Select <code>7 Advanced Options</code> -&gt; <code>A1 Expand filesystem</code></li>
<li>Select <code>7 Advanced Options</code> -&gt; <code>A3 Memory Split</code> -&gt; Enter <code>16</code></li>
<li>Reboot</li>
</ul>
<h2 id="prep-work">Prep Work</h2>
<p>Find the required IP addresses which will be needed for OpenVPN.</p>
<ul>
<li>External IP<br><code>curl ifconfig.me</code></li>
<li>Local IP<br><code>hostname -I</code></li>
</ul>
<hr>
<h2 id="openvpn">OpenVPN</h2>
<p>VPN stands for Virtual Private Network. A VPN creates an encrypted tunnel between the client and a VPN server. All the internet data is routed through this tunnel, so the data is secure from any man in the middle attacks.</p>
<p>Another benefit of a VPN is, is that it allows clients to remotely access the local network securely.</p>
<h3 id="install">Install</h3>
<pre><code class="language-bash">wget https://git.io/vpn -O openvpn-install.sh
chmod 755 openvpn-install.sh
sudo ./openvpn-install.sh</code></pre>
<p>Example settings at setup:</p>
<ul>
<li>Public IPv4 address / hostname []:<br><code>123.456.789.000</code></li>
<li>Protocol [1]:<br><code>UDP</code></li>
<li>Port [1194]:<br><code>11948</code></li>
<li>DNS [1]:<br><code>Current system resolvers</code></li>
<li>Client name [client]:<br><code>yinchie-phone</code></li>
</ul>
<p>Press enter once the correct settings have been chosen. The script will then install OpenVPN with the configured settings.</p>
<p>The generated opvn file can be used with an OpenVPN client on e.g. a cell phone. It can be found inside the <code>/root</code> directory, in my case <code>/root/yinchie-phone.ovpn</code>. I copy this over to the home directory <code>~/</code> for easy transferring it off the Raspberry Pi using SFTP.</p>
<h3 id="configure-openvpn">Configure OpenVPN</h3>
<p>First, find out the <code>tun0</code> interface IP address which is what OpenVPN uses using the command <code>ifconfig tun0 | grep 'inet'</code>. In my case, it is <code>10.8.0.1</code>.</p>
<pre><code class="language-bash">local@host:~ $ ifconfig tun0 | grep 'inet'
        inet 10.8.0.1  netmask 255.255.255.0  destination 10.8.0.1
        inet6 fe80::32f5:3e61:b36e:b29b  prefixlen 64  scopeid 0x20&lt;link&gt;</code></pre>
<ul>
<li>Edit OpenVPN server config. ‌<br><code>sudo nano /etc/openvpn/server/server.conf</code></li>
<li>Add the tun0 interface IP address, PiHole will be using it. ‌<br><code>push "dhcp-option DNS 10.8.0.1"</code></li>
<li>Comment out other <code>dhcp-option</code> references by adding a <code>#</code> in front of it. ‌<br><code>#push "dhcp-option DNS 192.168.1.1"</code></li>
<li>Restart OpenVPN server. ‌<br><code>sudo systemctl restart openvpn</code></li>
</ul>
<hr>
<h2 id="dnscrypt">DNSCrypt</h2>
<p>It is a protocol that authenticates communications between a DNS client and a DNS resolver. It prevents DNS spoofing. It uses cryptographic signatures to verify that responses originate from the chosen DNS resolver and haven't been tampered with.</p>
<h3 id="install-1">Install</h3>
<p>Install DNSCrypt-Proxy into the directory <code>/opt</code>, which is for installation of add-on application software packages.</p>
<pre><code class="language-bash">cd /opt
sudo wget https://github.com/DNSCrypt/dnscrypt-proxy/releases/download/2.0.44/dnscrypt-proxy-linux_arm-2.0.44.tar.gz
sudo tar xf dnscrypt-proxy-linux_arm-2.0.44.tar.gz
sudo rm dnscrypt-proxy-linux_arm-2.0.44.tar.gz
sudo mv linux-arm dnscrypt-proxy
cd dnscrypt-proxy
sudo cp example-dnscrypt-proxy.toml dnscrypt-proxy.toml</code></pre>
<h3 id="detailed-installation-">Detailed installation:</h3>
<ul>
<li>Go to the installation directory. ‌<br><code>cd /opt</code></li>
<li>Download DNSCrypt-Proxy. ‌<br><code>sudo wget <a href="https://github.com/DNSCrypt/dnscrypt-proxy/releases/download/2.0.44/dnscrypt-proxy-linux_arm-2.0.44.tar.gz">https://github.com/DNSCrypt/dnscrypt-proxy/releases/download/2.0.44/dnscrypt-proxy-linux_arm-2.0.44.tar.gz</a></code></li>
<li>Unpack the archive. ‌<br><code>sudo tar xf dnscrypt-proxy-linux_arm-2.0.44.tar.gz</code></li>
<li>Remove the archive. ‌<br><code>sudo rm dnscrypt-proxy-linux_arm-2.0.44.tar.gz</code></li>
<li>Rename the unpacked archive. ‌<br><code>sudo mv linux-arm dnscrypt-proxy</code></li>
<li>Go to the renamed directory. ‌<br><code>cd dnscrypt-proxy</code></li>
<li>Create a copy of the configuration file. ‌<br><code>sudo cp example-dnscrypt-proxy.toml dnscrypt-proxy.toml</code></li>
</ul>
<h3 id="configure-dnscrypt">Configure DNSCrypt</h3>
<p>For DNSCrypt-proxy to work correctly alongside Pi-Hole some changes must be made to the configuration file <code>dnscrypt-proxy.toml</code>.</p>
<p>Open  <code>dnscrypt-proxy.toml</code> by running the command<br><code>sudo nano dnscrypt-proxy.toml</code> while still in <code>/opt/dnscrypt-proxy</code>.</p>
<ul>
<li>Change port, since <code>53</code> is already being used by Pi-Hole.<br>This is the <code>listen_addresses</code> line. ‌<br>Change it to <code>listen_addresses = ['127.0.0.1:54','[::1]:54']</code></li>
<li>Change <code>require_dnssec = false</code> to <code>require_dnssec = true</code></li>
<li>Install the dnscrypt-proxy service. ‌<br><code>sudo ./dnscrypt-proxy -service install</code></li>
<li>Start the dnscrypt-proxy service. ‌<br><code>sudo ./dnscrypt-proxy -service start</code></li>
<li>Check the service status. ‌<br><code>sudo systemctl status dnscrypt-proxy</code></li>
</ul>
<p>Feel free to change additional options inside the configuration file to suit your needs as I have done.</p>
<figure class="post__image post__image--center" ><img loading="lazy" src="https://yinchie.github.io/media/posts/2/2020-03-12.png" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://yinchie.github.io/media/posts/2/responsive/2020-03-12-xs.png 300w ,https://yinchie.github.io/media/posts/2/responsive/2020-03-12-sm.png 480w ,https://yinchie.github.io/media/posts/2/responsive/2020-03-12-md.png 768w"  alt="DNSCrypt-Proxy service is running successfully. Screenshot shows a different configuration." width="1069" height="662">
<figcaption >CaptionDNSCrypt-Proxy service is running successfully. Screenshot shows a different configuration.</figcaption>
</figure>
<hr>
<h2 id="pi-hole">Pi-Hole</h2>
<p>It is a network-wide ad blocker that protects your devices from unwanted content, without installing any client-side software.</p>
<h3 id="install-2">Install</h3>
<p>At the installation pick whatever upstream DNS server. Modify it later in the configuration file.</p>
<figure class="kg-card kg-code-card">
<pre><code class="language-bash">wget -O basic-install.sh https://install.pi-hole.net
sudo bash basic-install.sh</code></pre>
<figcaption>Commands to install Pi-Hole using an automated script.</figcaption>
</figure>
<blockquote><em>Take note of the login password once the installation is complete.</em></blockquote>
<h3 id="configure-pi-hole">Configure Pi-Hole</h3>
<p>Add the DNSCrypt-Proxy server to Pi-Hole on the <a href="http://pi.hole/admin/settings.php?tab=dns">Pi-Hole admin page</a>.</p>
<figure class="post__image post__image--center" ><img loading="lazy" src="https://yinchie.github.io/media/posts/2/pihole-dns-settings.png" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://yinchie.github.io/media/posts/2/responsive/pihole-dns-settings-xs.png 300w ,https://yinchie.github.io/media/posts/2/responsive/pihole-dns-settings-sm.png 480w ,https://yinchie.github.io/media/posts/2/responsive/pihole-dns-settings-md.png 768w"  alt="Pi-Hole DNS settings page configured to use a custom upstream DNS server." width="1009" height="631">
<figcaption >CaptPi-Hole DNS settings page configured to use a custom upstream DNS server.ion</figcaption>
</figure>
<hr>
<h2 id="configure-clients">Configure clients</h2>
<p>Configure clients to use the Pi-Hole IP address as the DNS server or configure the router so that every client on the local network will be using Pi-Hole filtering while being DNSCrypt secured.</p>
<figure class="post__image post__image--center" ><img loading="lazy" src="https://yinchie.github.io/media/posts/2/windows-custom-dns-servers.png" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://yinchie.github.io/media/posts/2/responsive/windows-custom-dns-servers-xs.png 300w ,https://yinchie.github.io/media/posts/2/responsive/windows-custom-dns-servers-sm.png 480w ,https://yinchie.github.io/media/posts/2/responsive/windows-custom-dns-servers-md.png 768w"  alt="Example on Microsoft Windows." width="803" height="503">
<figcaption >CapExample on Microsoft Windows.tion</figcaption>
</figure>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Hello</title>
        <author>
            <name>Yee Chie Tu</name>
        </author>
        <link href="https://yinchie.github.io/hello/"/>
        <id>https://yinchie.github.io/hello/</id>

        <updated>2020-10-04T02:31:36+02:00</updated>
            <summary>
                <![CDATA[
                     Testing new website. 
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                
  <p>
    Testing new website.
  </p>
            ]]>
        </content>
    </entry>
</feed>
